{
  "main": {
    "id": "457d2f20679fefbc",
    "type": "split",
    "children": [
      {
        "id": "8e16fa96869ff49d",
        "type": "tabs",
        "children": [
          {
            "id": "19da6addde94afe2",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Obsidian Vault/AAD/Module 4/2. Principle of Optimality.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "2. Principle of Optimality"
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "0de0db737c0d0af6",
    "type": "split",
    "children": [
      {
        "id": "83f7c65ca20efb51",
        "type": "tabs",
        "children": [
          {
            "id": "5ad115f57a44c449",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical",
                "autoReveal": false
              },
              "icon": "lucide-folder-closed",
              "title": "Files"
            }
          },
          {
            "id": "b2c80646e21560b8",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "tag:#Computer_Networks",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "Search"
            }
          },
          {
            "id": "afbf018fc03c0e48",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 377.5
  },
  "right": {
    "id": "2285ec033214da64",
    "type": "split",
    "children": [
      {
        "id": "1ef3b64343466a6a",
        "type": "tabs",
        "children": [
          {
            "id": "6cc8b9ebcfa54c7a",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              },
              "icon": "lucide-tags",
              "title": "Tags"
            }
          },
          {
            "id": "b7a0162bd6644092",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "Obsidian Vault/Microprocessor and Microcontroller/16 Bit Addition With 8086.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "Backlinks for 16 Bit Addition With 8086"
            }
          },
          {
            "id": "e377b0a84f643b6d",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "Obsidian Vault/Microprocessor and Microcontroller/16 Bit Addition With 8086.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from 16 Bit Addition With 8086"
            }
          },
          {
            "id": "4e27caa62512c76e",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "Obsidian Vault/Microprocessor and Microcontroller/16 Bit Addition With 8086.md"
              },
              "icon": "lucide-list",
              "title": "Outline of 16 Bit Addition With 8086"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "obsidian-git:Open Git source control": false,
      "pdf-plus:PDF++: Toggle auto-copy": false,
      "pdf-plus:PDF++: Toggle auto-focus": false,
      "pdf-plus:PDF++: Toggle auto-paste": false
    }
  },
  "active": "19da6addde94afe2",
  "lastOpenFiles": [
    "Pasted image 20250506231829.png",
    "Pasted image 20250506231741.png",
    "Obsidian Vault/AAD/Module 4/1. Dynamic Programming.md",
    "Obsidian Vault/AAD/Module 4/2. Principle of Optimality.md",
    "Obsidian Vault/AAD/Module 3/9. Dijkstra's Algorithm.md",
    "Obsidian Vault/AAD/Module 4",
    "Obsidian Vault/AAD/Module 2/1. Binary Search Tree.md",
    "Obsidian Vault/FLAT/Module 3/CFG Questions.md",
    "Obsidian Vault/FLAT/Module 3/Ambiguous grammar.md",
    "Pasted image 20250506224928.png",
    "Pasted image 20250506224341.png",
    "Obsidian Vault/AAD/Module 3/8. Shortest Path Problem.md",
    "Pasted image 20250506223829.png",
    "Pasted image 20250506223817.png",
    "Obsidian Vault/AAD/Module 3/7. Kruskals Algorithm.md",
    "Pasted image 20250506223320.png",
    "Obsidian Vault/AAD/Module 3/6. Spanning Tree.md",
    "Obsidian Vault/AAD/Module 3/5. Fractional Knapsack.md",
    "Pasted image 20250506213234.png",
    "Pasted image 20250506211809.png",
    "Obsidian Vault/AAD/Module 3/4. Greedy Strategy.md",
    "Obsidian Vault/AAD/Module 3/3. Strassens Matrix Algo.md",
    "Pasted image 20250506210818.png",
    "Pasted image 20250506210811.png",
    "Obsidian Vault/AAD/Module 1/! 7. Master's Theorem.md",
    "Obsidian Vault/AAD/Module 3/2. Merge Sort.md",
    "Obsidian Vault/AAD/Module 2/Topological Sorting.md",
    "Obsidian Vault/AAD/Module 3/1. Divide and Conquer Abstraction.md",
    "Obsidian Vault/AAD/Module 2/5. Find and Collapsing Find.md",
    "Obsidian Vault/AAD/Module 3",
    "Obsidian Vault/AAD/Module 2/Algorithm to find Strongly Connected Components.md",
    "Obsidian Vault/AAD/Module 2/4. Disjoint Sets.md",
    "Obsidian Vault/AAD/Module 2/3. AVL Deletion.md",
    "Obsidian Vault/AAD/Module 2/2. AVL Tree Insertion.md",
    "Obsidian Vault/CGIP/Module 1/! DDA.md",
    "Obsidian Vault/AAD/Module 1/! 5. Recursion Tree Method.md",
    "Obsidian Vault/AAD/Module 2",
    "Obsidian Vault/AAD/Module 1/! 6. Iteration Method.md",
    "Obsidian Vault/AAD/Module 1/3. Performance Analysis.md",
    "Obsidian Vault/CGIP/PYQ/Module 5",
    "Obsidian Vault/CGIP/PYQ",
    "Obsidian Vault/CGIP/Module 5",
    "Obsidian Vault/CGIP/Module 4",
    "Obsidian Vault/CGIP/Module 3",
    "Music/Celer (2019-02-08) Xièxie [WEB FLAC 16 44] {2A15}/11 - Our Dream to Be Strangers.flac",
    "Music/Celer (2019-02-08) Xièxie [WEB FLAC 16 44] {2A15}/10 - (06.26.17) Waiting in Hangzhou.flac"
  ]
}